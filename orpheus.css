/*-----text-----*/

.charsheet {
  font-family: "Courier";
}

.charsheet .label {
  font-size: inherit;
  color: inherit;
  line-height: inherit;
  font-weight: inherit;
  text-align: inherit;
  vertical-align: inherit;
  white-space: inherit;
  border-radius: inherit;
}

.charsheet .checkbox,
.charsheet .radio {
  margin: inherit;
  padding: inherit;
}

.charsheet h5 {
  color: black;
  margin-top: 5px;
}

.charsheet th {
  color: black;
  padding-top: 10px;
  padding-bottom: 5px;
}

.charsheet h4 {
  color: black;
}

.charsheet h2 {
  background: white;
  margin: 10px 0px;
}

.charsheet h2 span {
  display: inline-block;
  color: white;
  background-color: black;
}

.charsheet h3 {
  font-weight: bold;
  font-size: 1.25em;

}

.charsheet .center {
  text-align: center
}

.charsheet .left {
  text-align: left
}

.charsheet .right {
  text-align: right
}

/*-----textarea-----*/

.charsheet textarea {
  height: 50px;
}

/*-----
.charsheet input[type="text"] {
  background:none;
  border:none:
  -webkit-box-shadow: none;
  -moz-box-shadow: none;
.charsheet box-shadow: none;
}
-----*/
/*-----tabs-----*/

.charsheet input.tab1:not(:checked) ~ .tab1,
.charsheet input.tab2:not(:checked) ~ .tab2,
.charsheet input.tab3:not(:checked) ~ .tab3,
.charsheet input.tab4:not(:checked) ~ .tab4,
.charsheet input.tab4:not(:checked) ~ .tab4,
.charsheet input.tab5:not(:checked) ~ .tab5 {
  display: none;
}

.charsheet input.tab {
  width: calc(20% - 4px);
  max-width: 150px;
  height: 20px;

  outline: none !important;
  position: relative;
  cursor: pointer;
  z-index: 1;
}

.charsheet input.tab1 {
  margin-left: 1px;
}

.charsheet input.tab::before {
  content: attr(title);
  display: inline-block;

  background: #fff;
  border: solid 1px #a8a8a8;
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;

  font-size: 14px;
  text-align: center;

  width: 100%;
  height: 20px;
}

.charsheet input.tab:checked::before {
  border-bottom-color: white;
  text-shadow: 0px 0px 10px black;
  font-weight: bold;
}

.charsheet .tab-br {
  border-bottom: 1px solid #a8a8a8;
  margin-bottom: 5px;
  margin-top: 6px;
}

/*-----radio boxes-----*/

/* -----Hide actual radio----- */
.charsheet input.normal[type="radio"] {
  opacity: 0;
  width: 16px;
  height: 16px;
  position: relative;
  top: 5px;
  left: 6px;
  margin: -10px;
  cursor: pointer;
  z-index: 1;
}

/* -----Fake radio----- */
.charsheet input.normal[type="radio"] + span::before {
  margin-right: 2px;
  border: solid 1px #a8a8a8;
  line-height: 14px;
  text-align: center;
  display: inline-block;
  vertical-align: middle;

  -moz-box-shadow: 0 0 2px #ccc;
  -webkit-box-shadow: 0 0 2px #ccc;
  box-shadow: 0 0 2px #ccc;

  background: #f6f6f6;
  background: -moz-radial-gradient(#f6f6f6, #dfdfdf);
  background: -webkit-radial-gradient(#f6f6f6, #dfdfdf);
  background: -ms-radial-gradient(#f6f6f6, #dfdfdf);
  background: -o-radial-gradient(#f6f6f6, #dfdfdf);
  background: radial-gradient(#f6f6f6, #dfdfdf);

  color: black;
  content: "•";
  width: 12px;
  height: 12px;
  font-size: 3em;

  -moz-border-radius: 50%;
  -webkit-border-radius: 50%;
  border-radius: 50%;
}

/* -----Remove dot from all radios _after_ selected one----- */
.charsheet input.normal[type="radio"]:checked ~ input.normal[type="radio"] + span::before {
  content: "";
}
.charsheet input.blackdot:checked + input.whitedot {
  z-index: 3;
}

.charsheet .grid {
  margin-left: auto;
  margin-right: auto;
}

.charsheet .dots,
.charsheet .healthboxes,
.charsheet .checkboxes {
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Used for wound penalty alignment */
.charsheet .healthbox {
  width: 12px;
  font-size: 10px;
}

.charsheet .checkboxes input.highlighted-if[value="0"] ~ .ge-0:not(.luminous) > button,
.charsheet .checkboxes input.highlighted-if[value="1"] ~ .ne-1:not(.luminous) > button,
.charsheet .checkboxes input.highlighted-if[value="2"] ~ .ne-2:not(.luminous) > button,
.charsheet .checkboxes input.highlighted-if[value="3"] ~ .ne-3:not(.luminous) > button,
.charsheet .checkboxes input.highlighted-if[value="4"] ~ .ne-4:not(.luminous) > button,
.charsheet .checkboxes input.highlighted-if[value="5"] ~ .ne-5:not(.luminous) > button,
.charsheet .checkboxes input.highlighted-if[value="6"] ~ .ne-6:not(.luminous) > button,
.charsheet .checkboxes input.highlighted-if[value="7"] ~ .ne-7:not(.luminous) > button,
.charsheet .checkboxes input.highlighted-if[value="8"] ~ .ne-8:not(.luminous) > button,
.charsheet .checkboxes input.highlighted-if[value="9"] ~ .ne-9:not(.luminous) > button {
  background-color: greenyellow;
}

.charsheet .checkboxes input.luminous-if ~ .luminous > button {
  background-color: yellow;
}

.charsheet .healthbox > input[value="1"] ~ button.damage {
  background:
    linear-gradient(to top left,
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, 0) calc(50% - 0.8px),
      currentColor 50%,
      rgba(0, 0, 0, 0) calc(50% + 0.8px),
      rgba(0, 0, 0, 0) 100%),
    #efefef;
}

.charsheet .healthbox > input[value="2"] ~ button.damage,
.charsheet .checkbox > input[value="1"] + button,
.charsheet .checkbox > input[value="on"] + button,
.charsheet .radio-select:hover input.clear[type="radio"] + span::before {
  background:
    linear-gradient(to top left,
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, 0) calc(50% - 0.8px),
      currentColor 50%,
      rgba(0, 0, 0, 0) calc(50% + 0.8px),
      rgba(0, 0, 0, 0) 100%),
    linear-gradient(to top right,
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, 0) calc(50% - 0.8px),
      currentColor 50%,
      rgba(0, 0, 0, 0) calc(50% + 0.8px),
      rgba(0, 0, 0, 0) 100%),
    #efefef;
}

.charsheet .healthbox > input[value="3"] ~ button.damage {
  background:
    linear-gradient(to top left,
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, 0) calc(50% - 0.8px),
      currentColor 50%,
      rgba(0, 0, 0, 0) calc(50% + 0.8px),
      rgba(0, 0, 0, 0) 100%),
    linear-gradient(to top right,
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, 0) calc(50% - 0.8px),
      currentColor 50%,
      rgba(0, 0, 0, 0) calc(50% + 0.8px),
      rgba(0, 0, 0, 0) 100%),
    linear-gradient(to right,
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, 0) calc(50% - 0.8px),
      currentColor 50%,
      rgba(0, 0, 0, 0) calc(50% + 0.8px),
      rgba(0, 0, 0, 0) 100%),
    #efefef;
}

.charsheet input.if[value="0"] ~ .ne-0,
.charsheet input.if[value="1"] ~ .ne-1,
.charsheet input.if:not([value="1"]) ~ .eq-1,
.charsheet input.if[value="2"] ~ .ne-2,
.charsheet input.if[value="3"] ~ .ne-3,
.charsheet input.if[value="4"] ~ .ne-4,
.charsheet input.if[value="5"] ~ .ne-5,
.charsheet input.if[value="6"] ~ .ne-6,
.charsheet input.if[value="7"] ~ .ne-7,
.charsheet input.if[value="8"] ~ .ne-8,
.charsheet input.if[value="9"] ~ .ne-9,
.charsheet input.if[value="10"] ~ .ne-10,
.charsheet input.if[value="11"] ~ .ne-11,
.charsheet input.if[value="12"] ~ .ne-12,
.charsheet input.if[value="13"] ~ .ne-13,
.charsheet input.if[value="14"] ~ .ne-14,
.charsheet input.if[value="15"] ~ .ne-15,
.charsheet input.if[value="16"] ~ .ne-16,
.charsheet input.luminous-if[value="0"] ~ .ne-luminous-0,
.charsheet input.luminous-if[value="1"] ~ .ne-luminous-1,
.charsheet input.luminous-if[value="2"] ~ .ne-luminous-2,
.charsheet input.luminous-if[value="3"] ~ .ne-luminous-3,
.charsheet input.luminous-if[value="4"] ~ .ne-luminous-4,
.charsheet input.lament-if[value="hue"] ~ .ne-hue,
.charsheet input.shade-if[value="spectre"] ~ .ne-spectre {
  display: none;
}

/*--------------Big Checkbox--------------*/

/* ----Hide actual arrow checkbox---- */
.charsheet input.bigcheck[type="checkbox"] {
  opacity: 0;
  width: 16px;
  height: 16px;
  position: relative;
  top: 5px;
  left: 6px;
  margin: -10px;
  cursor: pointer;
  z-index: 1;
}

/* ----Fake arrow checkbox---- */
.charsheet input.bigcheck[type="checkbox"] + span::before {
  margin-right: 4px;
  border: solid 1px #a8a8a8;
  line-height: 14px;
  text-align: center;
  display: inline-block;
  vertical-align: middle;

  -moz-box-shadow: 0 0 2px #ccc;
  -webkit-box-shadow: 0 0 2px #ccc;
  box-shadow: 0 0 2px #ccc;

  background: #f6f6f6;
  background: -moz-radial-gradient(#f6f6f6, #dfdfdf);
  background: -webkit-radial-gradient(#f6f6f6, #dfdfdf);
  background: -ms-radial-gradient(#f6f6f6, #dfdfdf);
  background: -o-radial-gradient(#f6f6f6, #dfdfdf);
  background: radial-gradient(#f6f6f6, #dfdfdf);
}

.charsheet input.bigcheck[type="checkbox"] + span::before {
  content: "";
  width: 14px;
  height: 14px;
  font-size: 12px;

  -moz-border-radius: 3px;
  -webkit-border-radius: 3px;
  border-radius: 3px;
}

.charsheet input.bigcheck[type="checkbox"]:checked + span::before {
  color: red;
  content: "✓";
}

/*--------------Round checkbox--------------*/

/* ----Hide actual roundcheck checkbox---- */
.charsheet input.roundcheck[type="checkbox"] {
  opacity: 0;
  width: 16px;
  height: 16px;
  position: relative;
  top: 5px;
  left: 6px;
  margin: -10px;
  cursor: pointer;
  z-index: 1;
}

/* ----Fake roundcheck checkbox---- */
.charsheet input.roundcheck[type="checkbox"] + span::before {
  margin-right: 4px;
  border: solid 1px #a8a8a8;
  line-height: 14px;
  text-align: center;
  display: inline-block;
  vertical-align: middle;
  border-radius: 20px 20px 20px 20px;

  -moz-box-shadow: 0 0 20px #ccc;
  -webkit-box-shadow: 0 0 20px #ccc;
  box-shadow: 0 0 20px #ccc;

  background: #f6f6f6;
  background: -moz-radial-gradient(#f6f6f6, #dfdfdf);
  background: -webkit-radial-gradient(#f6f6f6, #dfdfdf);
  background: -ms-radial-gradient(#f6f6f6, #dfdfdf);
  background: -o-radial-gradient(#f6f6f6, #dfdfdf);
  background: radial-gradient(#f6f6f6, #dfdfdf);

  -moz-border-radius: 20px 20px 20px 20px;
  -webkit-border-radius: 20px 20px 20px 20px;
  border-radius: 20px 20px 20px 20px;
}

.charsheet input.roundcheck[type="checkbox"] + span::before {
  content: "";
  width: 14px;
  height: 14px;
  font-size: 12px;

  -moz-border-radius: 20px;
  -webkit-border-radius: 20px;
  border-radius: 20px;
}

.charsheet input.roundcheck[type="checkbox"]:checked + span::before {
  color: blue;
  font-size: 3em;
  content: "•";
}

/*-------Tables--------*/
.charsheet table.devotions {
  border: 1px solid black;
  background: #1C1C1C;
}

.charsheet table.weapon,
.charsheet th.weapon,
.charsheet td.weapon {
  border: 1px solid black;
  background: white;
}

.charsheet th.armor,
.charsheet td.armor {
  border: 0px solid black;
  background: none;
}

/*-----arrow-----*/
.charsheet input.arrow {
  float: left;
}

.charsheet div.body {
  display: none;
}

.charsheet input.arrow:checked ~ div.body {
  display: block;
}

/* ----Hide actual arrow checkbox---- */

.charsheet input.arrow[type="checkbox"] {
  opacity: 0;
  width: 16px;
  height: 16px;
  position: relative;
  top: 5px;
  left: 6px;
  margin: -10px;
  cursor: pointer;
  z-index: 1;
}

/*-------sheet select---------*/

.charsheet .select {
  margin: 0;
  width: 210px;
}

.charsheet button.dot,
.charsheet .checkboxes button,
.charsheet .checkbox > input[type="hidden"] + button,
.charsheet .healthbox > button,
.charsheet input.flag + button.radio {
  width: 10px;
  height: 10px;
  padding: 0;
  border: solid 1px #000000;
  line-height: 11px;
  background: #efefef;
}
.charsheet button.toggle {
  /* Resetting user-agent styling */
  font-family: inherit;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  overflow: visible;
  text-transform: none;
  border-style: none;

  padding: 0 4px;
  background: white;
  border-radius: 4px;
  font-weight: bold;
}

.charsheet input.flag[value="1"] ~ .toggle {
  text-shadow: 0px 0px 10px black;
  font-weight: bold;
}
.charsheet .healthbox > input[value="2"] ~ button.damage,
.charsheet .checkbox > input[value="1"] + button,
.charsheet .checkbox > input[value="on"] + button,
.charsheet input.checked-if[value="0"] ~ .checkbox.ge-0 > button,
.charsheet input.checked-if[value="1"] ~ .checkbox.ge-1 > button,
.charsheet input.checked-if[value="2"] ~ .checkbox.ge-2 > button,
.charsheet input.checked-if[value="3"] ~ .checkbox.ge-3 > button,
.charsheet input.checked-if[value="4"] ~ .checkbox.ge-4 > button,
.charsheet input.checked-if[value="5"] ~ .checkbox.ge-5 > button,
.charsheet input.checked-if[value="6"] ~ .checkbox.ge-6 > button,
.charsheet input.checked-if[value="7"] ~ .checkbox.ge-7 > button,
.charsheet input.checked-if[value="8"] ~ .checkbox.ge-8 > button,
.charsheet input.checked-if[value="9"] ~ .checkbox.ge-9 > button,
.charsheet input.checked-if[value="10"] ~ .checkbox.ge-10 > button,
.charsheet input.checked-if[value="11"] ~ .checkbox.ge-11 > button,
.charsheet input.checked-if[value="12"] ~ .checkbox.ge-12 > button,
.charsheet input.checked-if[value="13"] ~ .checkbox.ge-13 > button,
.charsheet input.checked-if[value="14"] ~ .checkbox.ge-14 > button,
.charsheet input.checked-if[value="15"] ~ .checkbox.ge-15 > button,
.charsheet input.checked-if[value="16"] ~ .checkbox.ge-16 > button {
  background:
    linear-gradient(to top left,
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, 0) calc(50% - 0.8px),
      currentColor 50%,
      rgba(0, 0, 0, 0) calc(50% + 0.8px),
      rgba(0, 0, 0, 0) 100%),
    linear-gradient(to top right,
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, 0) calc(50% - 0.8px),
      currentColor 50%,
      rgba(0, 0, 0, 0) calc(50% + 0.8px),
      rgba(0, 0, 0, 0) 100%),
    #efefef;
}
.charsheet .skills {
  display: inline-grid;
  grid-template-columns: 1fr auto;
}

.charsheet .diceroller-grid > .span,
.charsheet .skills > .section-header,
.charsheet .diceroller-grid > .subheader,
.charsheet .skills > .subheader,
.charsheet .skills > .subsubheader {
  grid-column: 1 / span 2;
}

.charsheet .subheader {
  line-height: 1em;
  font-size: 1.4em;
  font-weight: bolder;
  text-align: center;
}

.charsheet .subsubheader {
  line-height: 1em;
  font-size: 0.8em;
  text-align: center;
  font-style: italic;
  font-weight: bolder;
}

.charsheet .section-header {
  line-height: 1em;
  font-size: 1.7em;
  font-weight: bolder;
  font-family: "Courier";
  color: #000000;
  text-decoration: overline underline;
  text-transform: uppercase;
  text-align: center;
}

.charsheet .attributes {
  display: grid;
  font-size: 13px;
  grid-template-areas:
    "category . mental mental . physical physical . social social"
    "category . mental mental . physical physical . social social"
    "category . mental mental . physical physical . social social";
  grid-template-columns: 1fr 6px repeat(2, 1fr) 6px repeat(2, 1fr) 6px repeat(2, 1fr);
  font-weight: bold;
}

.charsheet .attributes > * {
  padding: 0 4px;
}

.charsheet .attributes > .mental.border {
  grid-area: mental;
}

.charsheet .attributes > .physical.border {
  grid-area: physical;
}

.charsheet .attributes > .social.border {
  grid-area: social;
}

.charsheet .attributes > .border {
  border: 1px solid black;
}

.charsheet .attributes > .power {
  grid-row: 1;
}

.charsheet .attributes > .finesse {
  grid-row: 2;
}

.charsheet .attributes > .resistance {
  grid-row: 3;
}

.charsheet .attributes > .attributes-category {
  grid-column: category;
  text-align: right;
}

.charsheet .attributes > .mental.label {
  grid-column-start: mental-start;
}

.charsheet .attributes > .mental.dots {
  grid-column-end: mental-end;
}

.charsheet .attributes > .physical.label {
  grid-column-start: physical-start;
}

.charsheet .attributes > .physical.dots {
  grid-column-end: physical-end;
}

.charsheet .attributes > .social.label {
  grid-column-start: social-start;
}

.charsheet .attributes > .social.dots {
  grid-column-end: social-end;
}

/* Active dot */
.charsheet input[type="hidden"][value="1"] ~ button.dot:not(.zero):not(.ne-1),
.charsheet input[type="hidden"][value="2"] ~ button.dot:not(.zero):not(.ne-2),
.charsheet input[type="hidden"][value="3"] ~ button.dot:not(.zero):not(.ne-3),
.charsheet input[type="hidden"][value="4"] ~ button.dot:not(.zero):not(.ne-4),
.charsheet input[type="hidden"][value="5"] ~ button.dot:not(.zero):not(.ne-5),
.charsheet input[type="hidden"][value="6"] ~ button.dot:not(.zero):not(.ne-6),
.charsheet input[type="hidden"][value="7"] ~ button.dot:not(.zero):not(.ne-7),
.charsheet input[type="hidden"][value="8"] ~ button.dot:not(.zero):not(.ne-8),
.charsheet input[type="hidden"][value="9"] ~ button.dot:not(.zero):not(.ne-9),
.charsheet input[type="hidden"][value="10"] ~ button.dot:not(.zero):not(.ne-10),
.charsheet input[type="hidden"][value="11"] ~ button.dot:not(.zero):not(.ne-11),
.charsheet input[type="hidden"][value="12"] ~ button.dot:not(.zero):not(.ne-12),
.charsheet input[type="hidden"][value="13"] ~ button.dot:not(.zero):not(.ne-13),
.charsheet input[type="hidden"][value="14"] ~ button.dot:not(.zero):not(.ne-14),
.charsheet input[type="hidden"][value="15"] ~ button.dot:not(.zero):not(.ne-15) {
  background: currentColor;
}

.charsheet button.zero {
  opacity: 0;
}

.charsheet button.zero:hover {
  opacity: 0.25;
}

/* Styles unique to dot or radio */
.charsheet button.dot,
.charsheet input.flag + button.radio {
  -moz-border-radius: 50%;
  -webkit-border-radius: 50%;
  border-radius: 50%;
}

.charsheet .flex {
  display: flex;
  align-items: start;
}

.charsheet .inline-flex {
  display: inline-flex;
}

.charsheet .grow {
  flex-grow: 1;
}

.charsheet .columns {
  display: flex;
  justify-content: space-between;
  margin-bottom: 1.5em;
}

.charsheet .columns > :not(.horizontal-spacer) {
  flex-grow: 1;
}

.charsheet .horizontal-spacer {
  padding: 0 15px;
}

.charsheet .input-group {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 2px 0;
}

.charsheet .input-label {
  width: 85px;
  font-weight: bold;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.charsheet .input-group > input[type="text"],
.charsheet .input-group > button.toggle {
  width: 0;
  flex-grow: 1;
}

.charsheet .info-grid {
  display: grid;
  grid-template-columns: repeat(2, auto minmax(0, 1fr) 30px) auto minmax(0, 1fr);
  align-items: center;
}

.charsheet .info-grid > input[type="text"],
.charsheet .info-grid > select {
  width: auto;
}

.charsheet select {
  width: 80px;
  height: 14px;
  padding: 0px;
  background: none;
  color: black;
  font-family: "Courier";
  font-size: 12px;
  border: none;
  cursor: default;
  box-shadow: 0px 1px 0px #000;
  border-radius: 0px;
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  margin-bottom: 0px;
  line-height: 14px;
}

.charsheet .weapongrid,
.charsheet .armorgrid {
  display: grid;
  column-gap: 4px;
}

.charsheet .weapongrid {
  grid-template-columns: auto 1fr 4em 2em 4em 2em 2em 2em 2em;
}

.charsheet .armorgrid {
  grid-template-columns: auto 1fr 4em 2em 2em 2em 1fr;
}

.charsheet .weapongrid > :nth-child(-n+9),
.charsheet .armorgrid > :nth-child(-n+7) {
  justify-self: center;
  font-weight: bolder;
}

.charsheet .weapongrid > :nth-child(n+10),
.charsheet .armorgrid > :nth-child(n+8) {
  justify-self: stretch;
  display: flex;
  height: 18px;
}

.charsheet .weapongrid input[type="text"],
.charsheet .weapongrid select,
.charsheet .armorgrid input[type="text"],
.charsheet .armorgrid select {
  width: 0;
  height: 14px;
  flex-grow: 1;
}

/* Selected radio */
.charsheet input.flag[value="1"] + button.radio {
  background: radial-gradient(circle, currentColor 40%, #efefef 50%);
}

.charsheet .derived input {
  appearance: textfield;
  -moz-appearance: textfield;
}

.sheet-derived input[type=number] {
  width: 18px;
  padding: 0px;
  background: none;
  color: black;
  font-family: "Courier";
  text-align: center;
  border: none;
  cursor: default;
  box-shadow: none;
  height: 18px;
}

.charsheet input[type=text] {
  width: 165px;
  font-family: "Courier";
  font-size: 12px;
  height: 20px;
  border: 0px;
  border-radius: 0px;
  background: none;

  -moz-box-shadow: 0px 1px 0px #000;
  -webkit-box-shadow: 0px 1px 0px #000;
  box-shadow: 0px 1px 0px #000;
}

.charsheet textarea {
  margin: 10px 0 0 0;
  resize: vertical;
  width: calc(100% - 10px);
  height: 74px;
}

.charsheet .preserve-whitespace {
  white-space: pre;
}